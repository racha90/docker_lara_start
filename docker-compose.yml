version: "3"

services:
  app:
    build:
      context: ./
    container_name: ${APP_NAME}_app
    volumes:
      - ./:/usr/app:rw
      - /usr/app/vendor
    networks:
      frontend:
        ipv4_address: ${F_APP_HOST}
      backend:
        ipv4_address: ${B_APP_HOST}

  nginx:
    image: nginx:1.15-alpine
    container_name: ${APP_NAME}_nginx
    ports:
      - "${APP_PORT}:80"
      - "${APP_SSL_PORT}:443"
    volumes:
      - ./:/usr/app
      - ./docker/nginx:/etc/nginx/conf.d
    networks:
      frontend:
        ipv4_address: ${F_NGINX_HOST}

  postgres:
    image: postgres:11-alpine
    container_name: ${APP_NAME}_postgres
    restart: always
    ports:
      - ${DB_LOCAL_PORT}:${DB_PORT}
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./volumes/postgres:/var/lib/postgresql/data:rw
    networks:
      backend:
        ipv4_address: ${DB_HOST}

networks:
  frontend:
    driver: bridge
    ipam:
      config:
        - subnet: ${F_SUBNET}
  backend:
    driver: bridge
    ipam:
      config:
        - subnet: ${B_SUBNET}
